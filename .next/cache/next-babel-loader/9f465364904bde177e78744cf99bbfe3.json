{"ast":null,"code":"import sessions from 'client-sessions';\n\nconst config = require('../../bin/config'); // Helper method to wait for a middleware to execute before continuing\n// And to throw an error when an error happens in a middleware\n\n\nfunction runMiddleware(req, res, fn) {\n  return new Promise((resolve, reject) => {\n    fn(req, res, result => {\n      if (result instanceof Error) {\n        return reject(result);\n      }\n\n      return resolve(result);\n    });\n  });\n}\n\nexport default (async (req, res) => {\n  // Run sessions middleware\n  await runMiddleware(req, res, sessions);\n  let courseId = 1;\n  let moduleProgress = {};\n  let postTestStatus = {\n    open: true,\n    locked: false,\n    toolTip: ''\n  };\n  let score = 0;\n  let awardedScores = {};\n  res.statusCode = 200;\n  res.setHeader('Content-Type', 'application/json');\n  res.end(JSON.stringify({\n    title: \"Home | \" + config.herokuAppName,\n    courseId: courseId,\n    moduleProgress,\n    postTestStatus,\n    score,\n    awardedScores\n  }));\n});","map":null,"metadata":{},"sourceType":"module"}